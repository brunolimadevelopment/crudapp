1 passo:
 Na raiz da pasta crud instalamos o react via vite com o comando:
  - npm create vite@latest frontend --template react

2 passo:
  - instalamos os pacotes:
        npm install styled-components axios react-icons react-toastify

    styled-components: para estilizarmos nossa aplicaçao
    axios: para consumir nossa api construida no nosso back-end
    react-icons: para nossos icones
    react-toastify: para notificações

3 passo:
  - Remova os arquivos que nao serao utilizados, limpamos o workflow
  - app.css, index.css 

4 passo:
  - importamos as fontes do google no head do arquivo index.html

5 passo:
  - criamos uma pasta chamada styles dentro de src e em seguida criamos um arquivo chamado global.jsx
  e importamos o styled-components

    import { createGlobalStyle } from "styled-components";

    const Global = createGlobalStyle`

        * {
            margin: 0;
            padding: 0;
            font-family: 'poppins', sans-serif;
        }

        body {
            width: 100vw;
            height: 100vw;
            display: flex;
            justify-content: center;
            background-color: #f2f2f2;
        }

    `;

    export default Global;

6 passo:
 - no arquivo app.js limpamos os imports e importamos o stylo global, styled-components, toastify e o css dele
    
    import GlobalStyle from "./styles/global"
    import { styled } from "styled-components"
    import { toast, ToastContainer } from "react-toastify"
    import "react-toastify/dist/ReactToastify.css"

- adicionamos o seguinte estilo:

    const Container = styled.div`
        width: 100%;
        max-width: 800px;
        margin-top: 20px;
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 10px;
    `;

    const Title = styled.h2``;

7 passo:
    retornamos o GlobalStyle e o ToastContainer

    return (
        <>
            <Container><Title>USUÁRIOS</Title></Container>
            <ToastContainer autoClose={3000} position={toast.POSITION.BOTTOM_LEFT} />
            <GlobalStyle />
        </>
    )

    autoClose={3000} - tempo para a notificação sumir
    position={toast.POSITION.BOTTOM_LEFT} - posição da notificação na tela


8 passo:
    vamos criar nosso component de formulario dentro da pasta src:
    - components/Form.js
    no arquivo adicionamos o seguinte codigo:

    ----IMPORTAÇÕES--------
    import React, { useRef } from "react";
    import { styled } from "styled-components";

    ----ESTILIZAÇÃO--------
    const FormContainer = styled.form`
        display: flex;
        align-items: flex-end;
        gap: 10px;
        flex-wrap: wrap;
        background-color: #fff;
        padding: 20px;
        box-shadow: 0px 0px 5px #ccc;
        border-radius: 5px;
    `;

    const InputArea = styled.div`
        display: flex;
        flex-direction: column;
    `;

    const Input = styled.input`
        width: 120px;
        padding: 0 10px;
        border: 1px solid #bbb;
        border-radius: 5px;
        height: 40px;
    `;

    const Label = styled.label``;

    const Button = styled.button`
        padding: 10px;
        cursor: pointer;
        border-radius: 5px;
        border: none;
        background-color: #2c73d2;
        color: white;
        height: 42px;
    `

    ----COMPONENT FORMULARIO------
    const Form = ({ onEdit }) => {
        const ref = useRef();

        ---OBS-todos os names são iguais a coluna da nossa tabela do banco de dados -----
        return (
            <FormContainer ref={ref}>
                <InputArea>
                    <Label>Nome</Label>
                    <Input name="nome" />
                </InputArea>
                <InputArea>
                    <Label>Email</Label>
                    <Input name="email" type="email" />
                </InputArea>
                <InputArea>
                    <Label>Telefone</Label>
                    <Input name="fone" />
                </InputArea>
                <InputArea>
                    <Label>Data de Nascimento</Label>
                    <Input name="data_nascimento" type="date" />
                </InputArea>

                <Button type="submit">SALVAR</Button>
            </FormContainer>
        )
    }

    export default Form;
9 passo:
    Importamos o componet Form dentro do arquivo App.js
    
    import Form from "./components/Form"

    e dentro de return colocamos nosso componente:
        
        return (
            <>
                <Container><Title>USUÁRIOS</Title></Container>
            --> <Form />
                <ToastContainer autoClose={3000} position={toast.POSITION.BOTTOM_LEFT} />
                <GlobalStyle />
            </>
        )


10 passo:
    Criação do grid

assitir 21:40 https://www.youtube.com/watch?v=voXTVTW73E8&t=751s

https://dev.mysql.com/doc/mysql-getting-started/en/

https://www.youtube.com/watch?v=oXb-UE60KkI
https://www.youtube.com/@ProfessorEdsonMaia